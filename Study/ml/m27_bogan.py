# 결측치 

# [1, np.nan, np.nan, 8, 10]
# 데이터를 삭제할때 - 상황에 따라서 다르지만 
# 무작정 삭제를 하면 문제가 일어난다.   
# 
# 결측치 처리
# 1. 행삭제
# 2. 0넣기 (특정값) -  [1,0,0,8,10]
# 3.앞에 값과 동일 한것  [1,1,1,8,10]
# 4.뒤에 값과 동일 한것  [1,8,8,8,10]
# 5. 중위값 넣기       [1, 4.5, 4.5, 8, 10]

# 6. 보간 
# 통계적 혹은 실험적으로 구해진 데이터들(xi)로부터,
# 주어진 데이터를 만족하는 근사 함수(f(x))를 구하고,
# 이 식을 이용하여 주어진 변수에 대한 함수 값을 구하는 
# 일련의 과정을 의미한다.
# 예를 들어, (0, 0), (1, 10), (2, 20)이 주어졌을 때, 
# 이들에 대한 근사 함수를 f(x) = 10x로 구하고,
#  1.5에 대한 함수 값으로 15를 구하는 것이다.

# 7. 모델링 = predict 
# 8. 부스트계열은 결측치에 대해 자유(?) 롭다 - tree계열은 결측치 처리를 굳이 안해줘도 된다


from pandas import DataFrame, Series
from datetime import datetime     
import numpy as np    
import pandas as pd 

datestrs = ['8/13/2021', '8/14/2021', '8/15/2021', '8/16/2021', '8/17/2021']
dates = pd.to_datetime(datestrs)
# print(dates) # DatetimeIndex(['2021-08-13', '2021-08-14', '2021-08-15', '2021-08-16', '2021-08-17'],
# print(type(dates)) #<class 'pandas.core.indexes.datetimes.DatetimeIndex'>   
# print("==============================")

ts = Series([1, np.nan, np.nan, 8, 10], index=dates)
# print(ts)

# ==============================
# 2021-08-13     1.0
# 2021-08-14     NaN
# 2021-08-15     NaN
# 2021-08-16     8.0
# 2021-08-17    10.0
# dtype: float64

# 보간 으로결측치 채워주기 ( 결측치가 아닌값으로 회귀선을 긋고 값을 예측하는 방식)
ts_intp_linear = ts.interpolate()
print(ts_intp_linear)
# 2021-08-13     1.000000
# 2021-08-14     3.333333
# 2021-08-15     5.666667
# 2021-08-16     8.000000
# 2021-08-17    10.000000